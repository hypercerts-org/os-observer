name: os-observer-manual
env:
  DB_HOST: ${{ vars.DB_HOST }}
  DB_PORT: ${{ vars.DB_PORT }}
  DB_USER: ${{ vars.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: ${{ vars.DB_DATABASE }}
  X_GITHUB_GRAPHQL_API: ${{ vars.X_GITHUB_GRAPHQL_API }}
  X_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
  CACHE_DIR: /tmp/oso/cache
  RUN_DIR: /tmp/oso/run
  LOG_FILE: /tmp/oso/log/run.log

# Trigger the workflow when:
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      collector:
        description: 'Collector to run'
        required: true
        default: 'github-commits'
        type: choice
        options:
        - "github-commits"
        - "github-issues" 
        - "github-followers"
        - "funding-events"
        - "dune-funding-events"
        - "dune-daily-contract-usage"
      start-date:
        description: 'the start date for the queued job (ISO8601)'
        required: true
      end-date:
        description: 'the end date for the queued job (ISO8601)'
        required: true
      group:
        description: 'the group to use for cache'
        required: true

jobs:
  fetch-data:
    # NOTE: This name appears in GitHub's Checks API.
    name: fetch-data
    environment: indexer
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      CACHE_PREFIX: ${{ inputs.group }}
 
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: "18.x"

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Load docker persistent cache
        run: ./.github/scripts/load-cache.sh

      - name: Build
        run: pnpm build:indexer

      - name: Test cache loaded
        run: ls -halt ${CACHE_DIR}
      
      - name: Ensure log directory
        run: mkdir -p "$(dirname $LOG_FILE)"

      - name: Run worker for the given group
        run: bash .github/scripts/scheduler.sh scheduler manual ${{ inputs.collector }} --start-date ${{ inputs.start-date }} --end-date ${{ inputs.end-date }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: worker-log
          path: ${{ env.LOG_FILE }}

      - name: Close job execution if it exists
        if: always()
        run: pnpm start:indexer --cache-dir ${CACHE_DIR} --run-dir ${RUN_DIR} scheduler job clean-lock

      - name: Write to cache if needed
        if: always()
        run: ./.github/scripts/write-cache.sh