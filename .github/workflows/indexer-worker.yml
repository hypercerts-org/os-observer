# Generic worker executor. This is callable for use with cron scheduling.

# Execute the worker for a specific group
name: os-observer-indexer-worker
env:
  DB_HOST: ${{ vars.DB_HOST }}
  DB_PORT: ${{ vars.DB_PORT }}
  DB_USER: ${{ vars.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: ${{ vars.DB_DATABASE }}
  X_GITHUB_GRAPHQL_API: ${{ vars.X_GITHUB_GRAPHQL_API }}
  X_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
  CACHE_DIR: /tmp/oso/cache
  RUN_DIR: /tmp/oso/run
  LOG_FILE: /tmp/oso/log/run.log

# Trigger the workflow when:
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      group:
        description: 'group'
        required: false
        default: 'none'
  # This workflow is reusable
  workflow_call:
    inputs:
      group:
        description: 'group'
        type: string
        required: false
        default: 'none'

jobs:
  collector-worker-run:
    name: collector-worker-run
    environment: indexer
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      CACHE_PREFIX: ${{ inputs.group }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: "18.x"

      - name: Build
        run: pnpm build:indexer

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load docker persistent cache
        run: ./.github/scripts/load-cache.sh

      - name: Test cache loaded
        run: ls -halt ${CACHE_DIR}

      - name: Ensure log directory
        run: mkdir -p "$(dirname $LOG_FILE)"

      - name: Run worker for the given group
        run: bash .github/scripts/scheduler.sh worker ${{ inputs.group }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: worker-log
          path: ${{ env.LOG_FILE }}

      - name: Close job execution if it exists
        if: always()
        run: pnpm start:indexer --cache-dir ${CACHE_DIR} --run-dir ${RUN_DIR} scheduler job clean-lock

      - name: Write to cache if needed
        if: always()
        run: ./.github/scripts/write-cache.sh