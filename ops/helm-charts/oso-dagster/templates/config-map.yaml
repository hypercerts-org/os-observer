apiVersion: v1
kind: ConfigMap
metadata:
  name: dagster-oso-extra-env
data:
  DAGSTER_PG_USER: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.dbUser }}"
  DAGSTER_PG_DB_NAME: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.dbName }}"
  DAGSTER_DBT_IMPERSONATE_SERVICE_ACCOUNT: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.impersonateServiceAccount }}"
  DAGSTER_PG_PORT: "{{ .Values.pg.port }}"
  DAGSTER_PG_HOST: "{{ .Values.pg.host }}"
  DAGSTER_USE_LOCAL_SECRETS: "False"
  DAGSTER_GCP_SECRETS_PREFIX: "{{ .Values.global.serviceAccountName }}"
  DAGSTER_STAGING_BUCKET_URL: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.stagingBucketUrl }}"
  DAGSTER_DISCORD_WEBHOOK_URL: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.discordWebhookUrl }}"
  DAGSTER_ALERTS_BASE_URL: "{{ .Values.alerts.baseUrl }}"
  DAGSTER_HTTP_CACHE: "{{ .Values.cache.uri }}"
  DAGSTER_ENABLE_BIGQUERY: "1"
  DAGSTER_ENABLE_K8S_EXECUTOR: "1"
  DAGSTER_SQLMESH_GATEWAY: clickhouse
  SQLMESH_POSTGRES_INSTANCE_CONNECTION_STRING: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshPostgresInstanceStringConnectionString }}"
  SQLMESH_POSTGRES_USER: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshPostgresUser }}"
  SQLMESH_POSTGRES_PASSWORD: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshPostgresPassword }}"
  SQLMESH_POSTGRES_DB: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshPostgresDb }}"
  SQLMESH_CLICKHOUSE_HOST: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshClickhouseHost }}"
  SQLMESH_CLICKHOUSE_USERNAME: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshClickhouseUsername }}"
  SQLMESH_CLICKHOUSE_PASSWORD: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshClickhousePassword }}"
  SQLMESH_CLICKHOUSE_PORT: "{{ .Values.configMap.secretPrefix }}-{{ .Values.secretmanagerKeys.sqlmeshClickhousePort }}"
  SQLMESH_TRINO_HOST: "{{ .Values.sqlmesh.trino.host }}"
  SQLMESH_TRINO_PORT: "{{ .Values.sqlmesh.trino.port }}"
  SQLMESH_TRINO_USER: "{{ .Values.sqlmesh.trino.user }}"
  SQLMESH_TRINO_RETRIES: "{{ .Values.sqlmesh.trino.retries }}"
  SQLMESH_TRINO_CATALOG: "{{ .Values.sqlmesh.trino.catalog }}"
  SQLMESH_TRINO_CONCURRENT_TASKS: "{{ .Values.sqlmesh.trino.concurrentTasks }}"
  SQLMESH_MCS_ENABLED: "{{- if .Values.sqlmesh.mcs.enabled -}}1{{- else -}}0{{- end -}}"
  SQLMESH_MCS_URL: "{{ .Values.sqlmesh.mcs.url }}"
  SQLMESH_MCS_JOB_RETRIES: "{{ .Values.sqlmesh.mcs.jobRetries }}"
  SQLMESH_MCS_BATCH_SIZE: "{{ .Values.sqlmesh.mcs.batchSize }}"
  SQLMESH_MCS_CLUSTER_MIN_SIZE: "{{ .Values.sqlmesh.mcs.cluster.minSize }}"
  SQLMESH_MCS_CLUSTER_MAX_SIZE: "{{ .Values.sqlmesh.mcs.cluster.maxSize }}"
  SQLMESH_MCS_DEFAULT_SLOTS: "{{ .Values.sqlmesh.mcs.defaultSlots }}"
